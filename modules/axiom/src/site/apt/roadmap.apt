~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements. See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership. The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License. You may obtain a copy of the License at
~~
~~ http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied. See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

        -------------------
         Axiom 1.3 roadmap
        -------------------

Introduction

  This page summarizes the planned changes for the next major release, i.e. Axiom 1.3.
  Note that it is not intended as a wish list for new features, but identifies a set of
  changes that break backward compatibility and therefore need to
  be postponed to the 1.3 release.

  The overall goals for the 1.3 are:
  
   * Upgrade the API to Java 5, i.e. make use of generics.
   
   * Eliminate deprecated APIs and utility classes.
   
   * Eliminate remaining API inconsistencies.
   
   * Make the API more compact by clarifying the separation between the public API
     and implementation classes and moving implementation classes out of <<<axiom-api>>>.
   
API inconsistencies to be eliminated

* Usage of <<<Object>>> instead of <<<DataHandler>>>

  There are several APIs that use <<<Object>>> although they expect or return
  a <<<DataHandler>>>. This is probably a legacy of Axis 1.x where the Activation API
  was an optional dependency. Today this no longer makes sense:
  
   * The Activation API is included in Java 6.
   
   * It is unlikely that Axiom actually works if Activation is not in the class path
     because there is nothing in the build that enforces or tests that and there are no
     known downstream projects that use Axiom without also depending on the Activation API.
  
  The following APIs will be changed to use <<<DataHandler>>> directly:
  
   * <<<OMText#getDataHandler()>>>
   
   * <<<OMFactory#createOMText(Object, boolean)>>>
